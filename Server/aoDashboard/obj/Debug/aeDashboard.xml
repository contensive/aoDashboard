<?xml version="1.0"?>
<doc>
<assembly>
<name>
aeDashboard
</name>
</assembly>
<members>
<member name="T:Contensive.Addons.aoDashboard.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:Contensive.Addons.aoDashboard.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:Contensive.Addons.aoDashboard.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.#ctor">
 <summary>
 Create an empty object. needed for deserialization
 </summary>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.add``1(Contensive.BaseClasses.CPBaseClass)">
 <summary>
 Add a new recod to the db and open it. Starting a new model with this method will use the default values in Contensive metadata (active, contentcontrolid, etc).
 include callersCacheNameList to get a list of cacheNames used to assemble this response
 </summary>
 <param name="cp"></param>
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.create``1(Contensive.BaseClasses.CPBaseClass,System.Int32)">
 <summary>
 return a new model with the data selected. All cacheNames related to the object will be added to the cacheNameList.
 </summary>
 <param name="cp"></param>
 <param name="recordId">The id of the record to be read into the new object</param>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.create``1(Contensive.BaseClasses.CPBaseClass,System.String)">
 <summary>
 open an existing object
 </summary>
 <param name="cp"></param>
 <param name="recordGuid"></param>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.createByName``1(Contensive.BaseClasses.CPBaseClass,System.String)">
 <summary>
 open an existing object
 </summary>
 <param name="cp"></param>
 <param name="recordName"></param>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.loadRecord``1(Contensive.BaseClasses.CPBaseClass,Contensive.BaseClasses.CPCSBaseClass)">
 <summary>
 open an existing object
 </summary>
 <param name="cp"></param>
 <param name="cs"></param>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.save(Contensive.BaseClasses.CPBaseClass)">
 <summary>
 save the instance properties to a record with matching id. If id is not provided, a new record is created.
 </summary>
 <param name="cp"></param>
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.delete``1(Contensive.BaseClasses.CPBaseClass,System.Int32)">
 <summary>
 delete an existing database record by id
 </summary>
 <param name="cp"></param>
 <param name="recordId"></param>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.delete``1(Contensive.BaseClasses.CPBaseClass,System.String)">
 <summary>
 delete an existing database record by guid
 </summary>
 <param name="cp"></param>
 <param name="ccguid"></param>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.createList``1(Contensive.BaseClasses.CPBaseClass,System.String,System.String)">
 <summary>
 pattern get a list of objects from this model
 </summary>
 <param name="cp"></param>
 <param name="sqlCriteria"></param>
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.getRecordName``1(Contensive.BaseClasses.CPBaseClass,System.Int32)">
 <summary>
 get the name of the record by it's id
 </summary>
 <param name="cp"></param>
 <param name="recordId"></param>record
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.getRecordName``1(Contensive.BaseClasses.CPBaseClass,System.String)">
 <summary>
 get the name of the record by it's guid 
 </summary>
 <param name="cp"></param>
 <param name="ccGuid"></param>record
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.getRecordId``1(Contensive.BaseClasses.CPBaseClass,System.String)">
 <summary>
 get the id of the record by it's guid 
 </summary>
 <param name="cp"></param>
 <param name="ccGuid"></param>record
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoDashboard.Models.baseModel.getUploadPath``1(System.String)">
 <summary>
 Temporary method to create a path for an uploaded. First, try the texrt value in the field. If it is empty, use this method to create the path,
 append the filename to the end and save it to the field, and save the file there. This path starts with the tablename and ends with a slash.
 </summary>
 <param name="fieldName"></param>
 <returns></returns>
</member>
<member name="M:Contensive.Addons.aoDashboard.Controllers.genericController.getGUID(Contensive.BaseClasses.CPBaseClass,System.Boolean@)">
 <summary>
 return a normalized guid in registry format
 </summary>
 <param name="CP"></param>
 <param name="registryFormat"></param>
 <returns></returns>
</member>
</members>
</doc>
